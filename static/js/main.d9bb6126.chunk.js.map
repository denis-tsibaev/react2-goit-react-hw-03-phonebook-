{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Section/Section.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","formReset","this","inputChange","autoComplete","className","style","inputName","onChange","type","placeholder","pattern","title","required","inputNumber","formButton","Component","ContactItem","onDelete","id","onClick","deleteBtn","ContactList","contacts","onDeleteContact","orderList","map","contactListItem","Filter","onFilterChange","filterInput","Section","children","section","App","filter","formSubmitHandler","addContact","normalizedName","toLowerCase","find","contact","toast","error","theme","newContact","shortid","generate","deleteContact","contactId","prevState","handleFilterChange","getVisibleContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","console","log","setItem","stringify","visibleContact","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9bb6126.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderList\":\"ContactList_orderList__2P4Z_\",\"contactListItem\":\"ContactList_contactListItem__quLUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"ContactItem_deleteBtn__3fmHr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__c_fwV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2-v1D\"};","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport style from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.formReset();\r\n    };\r\n\r\n    formReset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        const inputChange = this.handleChange;\r\n\r\n        return (\r\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                <div>\r\n                    <label>\r\n                        Name\r\n                        <input\r\n                            className={style.inputName}\r\n                            onChange={inputChange}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            placeholder=\"text here\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <label>\r\n                        Number\r\n                        <input\r\n                            className={style.inputNumber}\r\n                            onChange={inputChange}\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            value={number}\r\n                            placeholder=\"text here\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <button type=\"submit\" className={style.formButton}>\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = { onSubmit: PropTypes.func.isRequired };\r\n","import PropTypes from 'prop-types';\r\nimport style from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ name, number, onDelete, id }) => (\r\n    <>\r\n        <span>\r\n            {name}: {number}\r\n        </span>\r\n        <button\r\n            type=\"submit\"\r\n            onClick={() => onDelete(id)}\r\n            className={style.deleteBtn}\r\n        >\r\n            Delete\r\n        </button>\r\n    </>\r\n);\r\n\r\nContactItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactItem from '../ContactItem';\r\nimport style from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <ol className={style.orderList}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <li key={id} className={style.contactListItem}>\r\n                    <ContactItem\r\n                        name={name}\r\n                        number={number}\r\n                        id={id}\r\n                        onDelete={onDeleteContact}\r\n                    />\r\n                </li>\r\n            ))}\r\n        </ol>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    ),\r\n};\r\n\r\nexport default ContactList;\r\n","import style from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onFilterChange }) => (\r\n    <div>\r\n        <label>\r\n            Find contacts by name\r\n            <input\r\n                type=\"text\"\r\n                className={style.filterInput}\r\n                value={value}\r\n                onChange={onFilterChange}\r\n            />\r\n        </label>\r\n    </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onFilterChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport style from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <section className={style.section}>\r\n        {title && <h2>{title}</h2>}\r\n        {children}\r\n    </section>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport shortid from 'shortid';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport Section from './components/Section';\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        contacts: [\r\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n        ],\r\n        filter: '',\r\n    };\r\n\r\n    componentDidMount() {\r\n        const contacts = localStorage.getItem('contacts');\r\n        const parsedContacts = JSON.parse(contacts);\r\n\r\n        if (parsedContacts) {\r\n            this.setState({ contacts: parsedContacts });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const nextContacts = this.state.contacts;\r\n        const prevContacts = prevState.contacts;\r\n\r\n        if (nextContacts !== prevContacts) {\r\n            console.log('updated contacts!');\r\n            localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n        }\r\n    }\r\n\r\n    formSubmitHandler = ({ name, number }) => {\r\n        this.addContact(name, number);\r\n    };\r\n\r\n    addContact = (name, number) => {\r\n        const normalizedName = name.toLowerCase();\r\n        const checkForDoubleName = this.state.contacts.find(\r\n            contact => normalizedName === contact.name.toLowerCase(),\r\n        );\r\n\r\n        if (checkForDoubleName) {\r\n            // return alert(`${name} is already in contacts!`);\r\n            toast.error(`${name} is already in contacts!`, {\r\n                theme: 'colored',\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            id: shortid.generate(),\r\n            name,\r\n            number,\r\n        };\r\n\r\n        this.setState(({ contacts }) => ({\r\n            contacts: [newContact, ...contacts],\r\n        }));\r\n    };\r\n\r\n    deleteContact = contactId => {\r\n        this.setState(prevState => ({\r\n            contacts: prevState.contacts.filter(\r\n                contact => contact.id !== contactId,\r\n            ),\r\n        }));\r\n    };\r\n\r\n    handleFilterChange = event => {\r\n        this.setState({ filter: event.target.value });\r\n    };\r\n\r\n    getVisibleContacts = () => {\r\n        const { contacts, filter } = this.state;\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { filter } = this.state;\r\n        const visibleContact = this.getVisibleContacts();\r\n\r\n        return (\r\n            <div className=\"appDiv\">\r\n                <Section title=\"Phonebook\">\r\n                    <ContactForm onSubmit={this.formSubmitHandler} />\r\n                </Section>\r\n                <Section>\r\n                    <Filter\r\n                        onFilterChange={this.handleFilterChange}\r\n                        value={filter}\r\n                    />\r\n                </Section>\r\n                <Section title=\"Contacts\">\r\n                    <ContactList\r\n                        contacts={visibleContact}\r\n                        onDeleteContact={this.deleteContact}\r\n                    />\r\n                </Section>\r\n                <ToastContainer autoClose={2000} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputName\":\"ContactForm_inputName__raYyU\",\"inputNumber\":\"ContactForm_inputNumber__MdGsq\",\"formButton\":\"ContactForm_formButton__3qF4W\"};"],"sourceRoot":""}